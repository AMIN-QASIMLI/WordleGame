module.exports = {
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2021,
    sourceType: "module",
    project: "./tsconfig.json", // Needed for some @typescript-eslint rules
  },
  settings: {
    react: {
      version: "detect",
    },
  },
  plugins: ["react", "react-hooks", "@typescript-eslint", "jsx-a11y"],
  extends: [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:jsx-a11y/recommended",
  ],
  rules: {
    // React specific rules
    "react/boolean-prop-naming": [
      "error",
      {
        rule: "^(is|has)[A-Z]([A-Za-z0-9]?)+",
        message: 'Boolean props should be prefixed with "is" or "has"',
      },
    ],
    "react/button-has-type": "error",
    "react/checked-requires-onchange-or-readonly": "error",
    "react/default-props-match-prop-types": "error",
    "react/destructuring-assignment": ["warn", "always"],
    "react/display-name": "warn",
    "react/forbid-component-props": "off",
    "react/forbid-dom-props": "off",
    "react/forbid-elements": "off",
    "react/forbid-foreign-prop-types": "off",
    "react/forbid-prop-types": "off",
    "react/forward-ref-uses-ref": "warn",
    "react/function-component-definition": [
      "warn",
      {
        namedComponents: "arrow-function",
        unnamedComponents: "arrow-function",
      },
    ],
    "react/hook-use-state": "warn",
    "react/iframe-missing-sandbox": "error",
    "react/jsx-boolean-value": ["warn", "never"],
    "react/jsx-child-element-spacing": "off",
    "react/jsx-closing-bracket-location": ["warn", "line-aligned"],
    "react/jsx-closing-tag-location": "warn",
    "react/jsx-curly-brace-presence": [
      "warn",
      { props: "never", children: "never" },
    ],
    "react/jsx-curly-newline": "warn",
    "react/jsx-curly-spacing": ["warn", { when: "never", children: true }],
    "react/jsx-equals-spacing": ["warn", "never"],
    "react/jsx-filename-extension": ["warn", { extensions: [".tsx"] }],
    "react/jsx-first-prop-new-line": ["warn", "multiline"],
    "react/jsx-fragments": ["warn", "syntax"],
    "react/jsx-handler-names": "off",
    "react/jsx-indent": ["warn", 2],
    "react/jsx-indent-props": ["warn", 2],
    "react/jsx-key": "error",
    "react/jsx-max-depth": ["off", { max: 4 }],
    "react/jsx-max-props-per-line": ["warn", { maximum: 1, when: "multiline" }],
    "react/jsx-newline": "off",
    "react/jsx-no-bind": "warn",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-constructed-context-values": "warn",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-leaked-render": "warn",
    "react/jsx-no-literals": "off",
    "react/jsx-no-script-url": "error",
    "react/jsx-no-target-blank": ["error", { enforceDynamicLinks: "always" }],
    "react/jsx-no-undef": "error",
    "react/jsx-no-useless-fragment": "warn",
    "react/jsx-one-expression-per-line": "warn",
    "react/jsx-pascal-case": ["error", { allowAllCaps: true, ignore: [] }],
    "react/jsx-props-no-multi-spaces": "warn",
    "react/jsx-props-no-spread-multi": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-sort-default-props": "off",
    "react/jsx-sort-props": "warn",
    "react/jsx-space-before-closing": "off",
    "react/jsx-tag-spacing": ["warn", { beforeSelfClosing: "always" }],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-wrap-multilines": "warn",
    "react/no-access-state-in-setstate": "warn",
    "react/no-adjacent-inline-elements": "off",
    "react/no-array-index-key": "warn",
    "react/no-arrow-function-lifecycle": "warn",
    "react/no-children-prop": "error",
    "react/no-danger": "warn",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "warn",
    "react/no-did-update-set-state": "warn",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-invalid-html-attribute": "warn",
    "react/no-is-mounted": "error",
    "react/no-multi-comp": "off",
    "react/no-namespace": "error",
    "react/no-object-type-as-default-prop": "off",
    "react/no-redundant-should-component-update": "warn",
    "react/no-render-return-value": "error",
    "react/no-set-state": "off",
    "react/no-string-refs": "error",
    "react/no-this-in-sfc": "error",
    "react/no-typos": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unsafe": "warn",
    "react/no-unstable-nested-components": "warn",
    "react/no-unused-class-component-methods": "warn",
    "react/no-unused-prop-types": "warn",
    "react/no-unused-state": "warn",
    "react/no-will-update-set-state": "warn",
    "react/prefer-es6-class": ["warn", "always"],
    "react/prefer-exact-props": "off",
    "react/prefer-read-only-props": "warn",
    "react/prefer-stateless-function": ["warn", { ignorePureComponents: true }],
    "react/prop-types": "off", // Using TypeScript for types
    "react/react-in-jsx-scope": "off", // Not needed in React 17+
    "react/require-default-props": "off", // Not needed with TS
    "react/require-optimization": "off",
    "react/require-render-return": "error",
    "react/self-closing-comp": "warn",
    "react/sort-comp": "off",
    "react/sort-default-props": "off",
    "react/sort-prop-types": "warn",
    "react/state-in-constructor": "off",
    "react/static-property-placement": "off",
    "react/style-prop-object": "warn",
    "react/void-dom-elements-no-children": "error",
  },
};
